AARCH64 GAS  validate1.asm 			page 1


   1              	.data
   2              	
   3 0000 506C6561 		str1: .asciz "Please enter a valid string: \n"
   3      73652065 
   3      6E746572 
   3      20612076 
   3      616C6964 
   4 001f 596F7520 		str2: .asciz "You entered: %s\n"
   4      656E7465 
   4      7265643A 
   4      2025730A 
   4      00
   5 0030 54686520 		str3: .asciz "The converted number is: %li\n"
   5      636F6E76 
   5      65727465 
   5      64206E75 
   5      6D626572 
   6 004e 2531385B 		str4: .asciz "%18[^\n]s"
   6      5E0A5D73 
   6      00
   7              	
   8              	.text
   9              	
  10              	
  11              	.global main
  12              	
  13              	main:
  14 0000 FD7BBFA9 		stp x29, x30, [sp, #-16]!
  15              		
  16 0004 FF8300D1 		add sp, sp, #-32
  17              	
  18 0008 C0060058 		ldr x0, =str1
  19 000c 00000094 		bl printf
  20              		
  21 0010 C0060058 		ldr x0, =str4
  22 0014 E1030091 		mov x1, sp
  23 0018 00000094 		bl scanf
  24              	
  25 001c E0030091 		mov x0, sp	
  26              	
  27 0020 00000094 		bl validate
  28              	
  29 0024 E1030091 		mov x1, sp
  30 0028 40060058 		ldr x0, =str2
  31 002c 00000094 		bl printf
  32              	
  33 0030 E0030091 		mov x0, sp
  34 0034 0F000094 		bl convert
  35              		
  36 0038 E1030BAA 		mov x1, x11
  37 003c 9F0600F1 		cmp x20, #1
  38 0040 E0000054 		b.eq make_neg
  39 0044 A0050058 		ldr x0, =str3
  40 0048 00000094 		bl printf
  41              		
  42              	final:
  43 004c FF830091 		add sp, sp, #32
AARCH64 GAS  validate1.asm 			page 2


  44 0050 FD7BC1A8 		ldp x29, x30, [sp], #16
  45 0054 00008052 		mov w0, #0
  46 0058 C0035FD6 		ret
  47              	
  48              	make_neg:
  49 005c 000080D2 		mov x0, #0
  50 0060 010001CB 		sub x1, x0, x1
  51 0064 A0040058 		ldr x0, =str3
  52 0068 00000094 		bl printf
  53 006c F8FFFF17 		b final
  54              		
  55              	convert:
  56 0070 FD7BBFA9 		stp x29, x30, [sp, #-16]!
  57 0074 E00F1FF8 		str x0, [sp,#-16]!
  58 0078 00000094 		bl length
  59 007c E10300AA 		mov x1, x0
  60 0080 210400D1 		sub x1, x1, #1
  61 0084 E00741F8 		ldr x0, [sp], #16
  62 0088 E30301AA 		mov x3, x1
  63 008c 0B0080D2 		mov x11,#0
  64 0090 2D0080D2 		mov x13, #1
  65 0094 4E0180D2 		mov x14, #10
  66              		
  67              	
  68              		loop:
  69 0098 3F0000F1 			cmp x1, #0
  70 009c CB010054 			b.lt end
  71 00a0 02686138 			ldrb w2, [x0, x1]
  72 00a4 5FAC0071 			cmp w2, #0x2B
  73 00a8 60010054 			b.eq end
  74 00ac 5FB40071 			cmp w2, #0x2D
  75 00b0 20010054 			b.eq end
  76 00b4 42C00051 			sub w2, w2, #0x30
  77 00b8 421C0053 			uxtb x2, w2
  78 00bc 427C0D9B 			mul x2, x2, x13
  79 00c0 6B01028B 			add x11, x11, x2
  80 00c4 01000014 			b decrement
  81              	
  82              	
  83              		decrement:
  84 00c8 210400D1 			sub x1, x1, #1
  85 00cc AD7D0E9B 			mul x13, x13, x14
  86 00d0 F2FFFF17 			b loop
  87              	
  88              	end:
  89 00d4 E0030BAA 		mov x0, x11
  90 00d8 FD7BC1A8 		ldp x29, x30, [sp], #16
  91 00dc C0035FD6 		ret
  91      00000000 
  91      00000000 
  91      00000000 
  91      00000000 
   1              		.arch armv8-a
   2              		.file	"flush.c"
   3              		.text
   4              		.align	2
   5              		.global	flush
AARCH64 GAS  validate1.asm 			page 3


   6              		.type	flush, %function
   7              	flush:
   8              	.LFB0:
   9              		.cfi_startproc
  10 0100 FD7BBEA9 		stp	x29, x30, [sp, -32]!
  11              		.cfi_def_cfa_offset 32
  12              		.cfi_offset 29, -32
  13              		.cfi_offset 30, -24
  14 0104 FD030091 		mov	x29, sp
  15 0108 1F2003D5 		nop
  16              	.L2:
  17 010c 00000094 		bl	getchar
  18 0110 E07F0039 		strb	w0, [sp, 31]
  19 0114 E07F4039 		ldrb	w0, [sp, 31]
  20 0118 1F280071 		cmp	w0, 10
  21 011c 81FFFF54 		bne	.L2
  22 0120 1F2003D5 		nop
  23 0124 1F2003D5 		nop
  24 0128 FD7BC2A8 		ldp	x29, x30, [sp], 32
  25              		.cfi_restore 30
  26              		.cfi_restore 29
  27              		.cfi_def_cfa_offset 0
  28 012c C0035FD6 		ret
  29              		.cfi_endproc
  30              	.LFE0:
  31              		.size	flush, .-flush
  32              		.ident	"GCC: (Debian 10.2.1-6) 10.2.1 20210110"
  33              		.section	.note.GNU-stack,"",@progbits
   1              	.data
   2              	
   3              	.text
   4              	
   5              	.global length
   6              	
   7              	
   8              	length:
   9 0130 FD7BBFA9 		stp x29, x30, [sp, #-16]!
  10 0134 010080D2 		mov x1, #0
  11              		loop1:
  12 0138 02686138 			ldrb w2, [x0, x1]
  13 013c 62000034 			cbz w2, end1
  14 0140 21040091 			add x1, x1, #1
  15 0144 FDFFFF17 			b loop1
  16              	
  17              		end1:
  18 0148 E00301AA 			mov x0, x1
  19 014c FD7BC1A8 			ldp x29, x30, [sp], #16
  20 0150 C0035FD6 			ret
   1              	.data
   2              	
   3              	.text
   4              	
   5              	.global validate
   6              	
   7              	validate:
   8 0154 FD7BBFA9 		stp x29, x30, [sp, #-16]!
   9              		//mov x1, #0
AARCH64 GAS  validate1.asm 			page 4


  10 0158 E00F1FF8 		str x0, [sp, #-16]!
  11 015c 00000094 		bl length
  12 0160 E10300AA 		mov x1, x0
  13 0164 210400D1 		sub x1, x1, #1
  14 0168 E00741F8 		ldr x0, [sp], #16
  15              	
  16              		loopx:
  17 016c 3F0000F1 			cmp x1, #0
  18 0170 8B020054 			b.lt end2
  19 0174 02686138 			ldrb w2, [x0, x1]
  20 0178 3F0000F1 			cmp x1, #0
  21 017c C0000054 			b.eq first
  22 0180 5FC00071 			cmp w2, #0x30
  23 0184 2B010054 			b.lt invalid
  24 0188 5FE40071 			cmp w2, #0x39
  25 018c EC000054 			b.gt invalid
  26 0190 0A000014 			b decrement1
  27              	
  28              		first:
  29 0194 5FB40071 			cmp w2, #0x2D
  30 0198 C0000054 			b.eq is_neg
  31 019c 5FAC0071 			cmp w2, #0x2B
  32 01a0 00010054 			b.eq end2
  33 01a4 05000014 			b decrement1
  34              	
  35              		invalid:
  36 01a8 00000094 			bl flush
  37 01ac 00000014 			b main
  38              	
  39              		is_neg:
  40 01b0 340080D2 			mov x20, #1
  41 01b4 03000014 			b end2
  42              	
  43              		decrement1:
  44 01b8 210400D1 			sub x1, x1, #1
  45 01bc ECFFFF17 			b loopx
  46              	
  47              	end2:
  48 01c0 FD7BC1A8 		ldp x29, x30, [sp], #16	
  49 01c4 C0035FD6 		ret		
AARCH64 GAS  validate1.asm 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 flush.c
      conversion.asm:3      .data:0000000000000000 str1
      conversion.asm:4      .data:000000000000001f str2
      conversion.asm:5      .data:0000000000000030 str3
      conversion.asm:6      .data:000000000000004e str4
      conversion.asm:13     .text:0000000000000000 main
      conversion.asm:14     .text:0000000000000000 $x
       validate1.asm:7      .text:0000000000000154 validate
      conversion.asm:55     .text:0000000000000070 convert
      conversion.asm:48     .text:000000000000005c make_neg
      conversion.asm:42     .text:000000000000004c final
      string_len.asm:8      .text:0000000000000130 length
      conversion.asm:68     .text:0000000000000098 loop
      conversion.asm:88     .text:00000000000000d4 end
      conversion.asm:83     .text:00000000000000c8 decrement
      conversion.asm:91     .text:00000000000000e0 $d
             flush.s:4      .text:0000000000000100 $x
             flush.s:7      .text:0000000000000100 flush
      string_len.asm:11     .text:0000000000000138 loop1
      string_len.asm:17     .text:0000000000000148 end1
       validate1.asm:16     .text:000000000000016c loopx
       validate1.asm:47     .text:00000000000001c0 end2
       validate1.asm:28     .text:0000000000000194 first
       validate1.asm:35     .text:00000000000001a8 invalid
       validate1.asm:43     .text:00000000000001b8 decrement1
       validate1.asm:39     .text:00000000000001b0 is_neg
                        .eh_frame:0000000000000014 $d

UNDEFINED SYMBOLS
printf
scanf
getchar
